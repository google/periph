// Code generated by "stringer -output=strings_gen.go -type=CameraStatus,command,FFCShutterMode,FFCState,ShutterPos,ShutterTempLockoutState"; DO NOT EDIT.

package cci

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SystemReady-0]
	_ = x[SystemInitializing-1]
	_ = x[SystemInLowPowerMode-2]
	_ = x[SystemGoingIntoStandby-3]
	_ = x[SystemFlatFieldInProcess-4]
}

const _CameraStatus_name = "SystemReadySystemInitializingSystemInLowPowerModeSystemGoingIntoStandbySystemFlatFieldInProcess"

var _CameraStatus_index = [...]uint8{0, 11, 29, 49, 71, 95}

func (i CameraStatus) String() string {
	if i >= CameraStatus(len(_CameraStatus_index)-1) {
		return "CameraStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CameraStatus_name[_CameraStatus_index[i]:_CameraStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[agcEnable-256]
	_ = x[agcRoiSelect-264]
	_ = x[agcHistogramStats-268]
	_ = x[agcHeqDampFactor-292]
	_ = x[agcHeqClipLimitHigh-300]
	_ = x[agcHeqClipLimitLow-304]
	_ = x[agcHeqEmptyCounts-316]
	_ = x[agcHeqOutputScaleFactor-324]
	_ = x[agcCalculationEnable-328]
	_ = x[oemPowerDown-18432]
	_ = x[oemPartNumber-18460]
	_ = x[oemSoftwareRevision-18464]
	_ = x[oemVideoOutputEnable-18468]
	_ = x[oemVideoOutputFormat-18472]
	_ = x[oemVideoOutputSource-18476]
	_ = x[oemCustomerPartNumber-18488]
	_ = x[oemVideoOutputConst-18492]
	_ = x[oemCameraReboot-18496]
	_ = x[oemFCCNormalizationTarget-18500]
	_ = x[oemStatus-18504]
	_ = x[oemFrameMeanIntensity-18508]
	_ = x[oemGPIOModeSelect-18516]
	_ = x[oemGPIOVSyncPhaseDelay-18520]
	_ = x[oemUserDefaults-18524]
	_ = x[oemRestoreUserDefaults-18528]
	_ = x[oemShutterProfile-16484]
	_ = x[oemThermalShutdownEnable-18536]
	_ = x[oemBadPixel-18540]
	_ = x[oemTemporalFilter-18544]
	_ = x[oemColumnNoiseFilter-18548]
	_ = x[oemPixelNoiseFilter-18552]
	_ = x[sysPing-512]
	_ = x[sysStatus-516]
	_ = x[sysSerialNumber-520]
	_ = x[sysUptime-524]
	_ = x[sysHousingTemperature-528]
	_ = x[sysTemperature-532]
	_ = x[sysTelemetryEnable-536]
	_ = x[sysTelemetryLocation-540]
	_ = x[sysExecuteFrameAverage-544]
	_ = x[sysFlatFieldFrames-548]
	_ = x[sysCustomSerialNumber-552]
	_ = x[sysRoiSceneStats-556]
	_ = x[sysRoiSceneSelect-560]
	_ = x[sysThermalShutdownCount-564]
	_ = x[sysShutterPosition-568]
	_ = x[sysFFCMode-572]
	_ = x[sysFCCRunNormalization-576]
	_ = x[sysFCCStatus-580]
	_ = x[vidColorLookupSelect-772]
	_ = x[vidColorLookupTransfer-776]
	_ = x[vidFocusCalculationEnable-780]
	_ = x[vidFocusRoiSelect-784]
	_ = x[vidFocusMetricThreshold-788]
	_ = x[vidFocusMetricGet-792]
	_ = x[vidVideoFreezeEnable-804]
}

const _command_name = "agcEnableagcRoiSelectagcHistogramStatsagcHeqDampFactoragcHeqClipLimitHighagcHeqClipLimitLowagcHeqEmptyCountsagcHeqOutputScaleFactoragcCalculationEnablesysPingsysStatussysSerialNumbersysUptimesysHousingTemperaturesysTemperaturesysTelemetryEnablesysTelemetryLocationsysExecuteFrameAveragesysFlatFieldFramessysCustomSerialNumbersysRoiSceneStatssysRoiSceneSelectsysThermalShutdownCountsysShutterPositionsysFFCModesysFCCRunNormalizationsysFCCStatusvidColorLookupSelectvidColorLookupTransfervidFocusCalculationEnablevidFocusRoiSelectvidFocusMetricThresholdvidFocusMetricGetvidVideoFreezeEnableoemShutterProfileoemPowerDownoemPartNumberoemSoftwareRevisionoemVideoOutputEnableoemVideoOutputFormatoemVideoOutputSourceoemCustomerPartNumberoemVideoOutputConstoemCameraRebootoemFCCNormalizationTargetoemStatusoemFrameMeanIntensityoemGPIOModeSelectoemGPIOVSyncPhaseDelayoemUserDefaultsoemRestoreUserDefaultsoemThermalShutdownEnableoemBadPixeloemTemporalFilteroemColumnNoiseFilteroemPixelNoiseFilter"

var _command_map = map[command]string{
	256:   _command_name[0:9],
	264:   _command_name[9:21],
	268:   _command_name[21:38],
	292:   _command_name[38:54],
	300:   _command_name[54:73],
	304:   _command_name[73:91],
	316:   _command_name[91:108],
	324:   _command_name[108:131],
	328:   _command_name[131:151],
	512:   _command_name[151:158],
	516:   _command_name[158:167],
	520:   _command_name[167:182],
	524:   _command_name[182:191],
	528:   _command_name[191:212],
	532:   _command_name[212:226],
	536:   _command_name[226:244],
	540:   _command_name[244:264],
	544:   _command_name[264:286],
	548:   _command_name[286:304],
	552:   _command_name[304:325],
	556:   _command_name[325:341],
	560:   _command_name[341:358],
	564:   _command_name[358:381],
	568:   _command_name[381:399],
	572:   _command_name[399:409],
	576:   _command_name[409:431],
	580:   _command_name[431:443],
	772:   _command_name[443:463],
	776:   _command_name[463:485],
	780:   _command_name[485:510],
	784:   _command_name[510:527],
	788:   _command_name[527:550],
	792:   _command_name[550:567],
	804:   _command_name[567:587],
	16484: _command_name[587:604],
	18432: _command_name[604:616],
	18460: _command_name[616:629],
	18464: _command_name[629:648],
	18468: _command_name[648:668],
	18472: _command_name[668:688],
	18476: _command_name[688:708],
	18488: _command_name[708:729],
	18492: _command_name[729:748],
	18496: _command_name[748:763],
	18500: _command_name[763:788],
	18504: _command_name[788:797],
	18508: _command_name[797:818],
	18516: _command_name[818:835],
	18520: _command_name[835:857],
	18524: _command_name[857:872],
	18528: _command_name[872:894],
	18536: _command_name[894:918],
	18540: _command_name[918:929],
	18544: _command_name[929:946],
	18548: _command_name[946:966],
	18552: _command_name[966:985],
}

func (i command) String() string {
	if str, ok := _command_map[i]; ok {
		return str
	}
	return "command(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FFCShutterModeManual-0]
	_ = x[FFCShutterModeAuto-1]
	_ = x[FFCShutterModeExternal-2]
}

const _FFCShutterMode_name = "FFCShutterModeManualFFCShutterModeAutoFFCShutterModeExternal"

var _FFCShutterMode_index = [...]uint8{0, 20, 38, 60}

func (i FFCShutterMode) String() string {
	if i >= FFCShutterMode(len(_FFCShutterMode_index)-1) {
		return "FFCShutterMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FFCShutterMode_name[_FFCShutterMode_index[i]:_FFCShutterMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FFCNever-0]
	_ = x[FFCInProgress-1]
	_ = x[FFCComplete-2]
}

const _FFCState_name = "FFCNeverFFCInProgressFFCComplete"

var _FFCState_index = [...]uint8{0, 8, 21, 32}

func (i FFCState) String() string {
	if i >= FFCState(len(_FFCState_index)-1) {
		return "FFCState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FFCState_name[_FFCState_index[i]:_FFCState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ShutterPosUnknown-4294967295]
	_ = x[ShutterPosIdle-0]
	_ = x[ShutterPosOpen-1]
	_ = x[ShutterPosClosed-2]
	_ = x[ShutterPosBrakeOn-3]
}

const (
	_ShutterPos_name_0 = "ShutterPosIdleShutterPosOpenShutterPosClosedShutterPosBrakeOn"
	_ShutterPos_name_1 = "ShutterPosUnknown"
)

var (
	_ShutterPos_index_0 = [...]uint8{0, 14, 28, 44, 61}
)

func (i ShutterPos) String() string {
	switch {
	case i <= 3:
		return _ShutterPos_name_0[_ShutterPos_index_0[i]:_ShutterPos_index_0[i+1]]
	case i == 4294967295:
		return _ShutterPos_name_1
	default:
		return "ShutterPos(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ShutterTempLockoutStateInactive-0]
	_ = x[ShutterTempLockoutStateHigh-1]
	_ = x[ShutterTempLockoutStateLow-2]
}

const _ShutterTempLockoutState_name = "ShutterTempLockoutStateInactiveShutterTempLockoutStateHighShutterTempLockoutStateLow"

var _ShutterTempLockoutState_index = [...]uint8{0, 31, 58, 84}

func (i ShutterTempLockoutState) String() string {
	if i >= ShutterTempLockoutState(len(_ShutterTempLockoutState_index)-1) {
		return "ShutterTempLockoutState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ShutterTempLockoutState_name[_ShutterTempLockoutState_index[i]:_ShutterTempLockoutState_index[i+1]]
}
